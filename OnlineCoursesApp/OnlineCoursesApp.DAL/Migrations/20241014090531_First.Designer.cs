// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineCoursesApp.DAL.Models;

#nullable disable

namespace OnlineCoursesApp.DAL.Migrations
{
    [DbContext(typeof(OnlineCoursesDbContext))]
    [Migration("20241014090531_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineCoursesApp.DAL.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("OnlineCoursesApp.DAL.Models.Enroll", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("CourseID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("StudentID", "CourseID");

                    b.HasIndex("CourseID");

                    b.ToTable("Enroll");
                });

            modelBuilder.Entity("OnlineCoursesApp.DAL.Models.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Instructor");
                });

            modelBuilder.Entity("OnlineCoursesApp.DAL.Models.Section", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("OnlineCoursesApp.DAL.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Education")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("OnlineCoursesApp.DAL.Models.StudentProgress", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("SectionID")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.HasIndex("SectionID");

                    b.HasIndex("StudentID");

                    b.ToTable("StudentProgress");
                });

            modelBuilder.Entity("OnlineCoursesApp.DAL.Models.Tech", b =>
                {
                    b.Property<int>("InstructorID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("CourseID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("InstructorID", "CourseID");

                    b.HasIndex("CourseID");

                    b.ToTable("Tech");
                });

            modelBuilder.Entity("OnlineCoursesApp.DAL.Models.Enroll", b =>
                {
                    b.HasOne("OnlineCoursesApp.DAL.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OnlineCoursesApp.DAL.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("OnlineCoursesApp.DAL.Models.Section", b =>
                {
                    b.HasOne("OnlineCoursesApp.DAL.Models.Course", "Course")
                        .WithMany("Sections")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("OnlineCoursesApp.DAL.Models.StudentProgress", b =>
                {
                    b.HasOne("OnlineCoursesApp.DAL.Models.Course", "Course")
                        .WithMany("StudentProgresses")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OnlineCoursesApp.DAL.Models.Section", "Section")
                        .WithMany("StudentProgresses")
                        .HasForeignKey("SectionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OnlineCoursesApp.DAL.Models.Student", "Student")
                        .WithMany("StudentProgresses")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Section");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("OnlineCoursesApp.DAL.Models.Tech", b =>
                {
                    b.HasOne("OnlineCoursesApp.DAL.Models.Course", "Course")
                        .WithMany("Techs")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("OnlineCoursesApp.DAL.Models.Instructor", "Instructor")
                        .WithMany("Techs")
                        .HasForeignKey("InstructorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("OnlineCoursesApp.DAL.Models.Course", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Sections");

                    b.Navigation("StudentProgresses");

                    b.Navigation("Techs");
                });

            modelBuilder.Entity("OnlineCoursesApp.DAL.Models.Instructor", b =>
                {
                    b.Navigation("Techs");
                });

            modelBuilder.Entity("OnlineCoursesApp.DAL.Models.Section", b =>
                {
                    b.Navigation("StudentProgresses");
                });

            modelBuilder.Entity("OnlineCoursesApp.DAL.Models.Student", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("StudentProgresses");
                });
#pragma warning restore 612, 618
        }
    }
}
